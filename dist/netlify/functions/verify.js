const CryptoJS=require("crypto-js");async function verifyToken(e,s){try{const r=CryptoJS.AES.decrypt(e,"verigate-secret"),t=JSON.parse(r.toString(CryptoJS.enc.Utf8));if(!t.sessionId||!t.siteKey||!t.timestamp)return{success:!1,error:"令牌格式无效"};if(t.siteKey!==s)return{success:!1,error:"站点密钥不匹配"};return Date.now()-t.timestamp>3e5?{success:!1,error:"令牌已过期"}:"completed"!==t.challenge?{success:!1,error:"挑战未完成"}:{success:!0,sessionId:t.sessionId,timestamp:t.timestamp,challenge:t.challenge}}catch(e){return console.error("令牌解密错误:",e),{success:!1,error:"令牌解析失败"}}}exports.handler=async(e,s)=>{const r={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"Content-Type","Access-Control-Allow-Methods":"POST, OPTIONS","Content-Type":"application/json"};if("OPTIONS"===e.httpMethod)return{statusCode:200,headers:r,body:""};if("POST"!==e.httpMethod)return{statusCode:405,headers:r,body:JSON.stringify({success:!1,error:"只允许POST请求"})};try{const{token:s,siteKey:t}=JSON.parse(e.body);if(!s)return{statusCode:400,headers:r,body:JSON.stringify({success:!1,error:"缺少验证令牌"})};if(!t)return{statusCode:400,headers:r,body:JSON.stringify({success:!1,error:"缺少站点密钥"})};const o=await verifyToken(s,t);return o.success?{statusCode:200,headers:r,body:JSON.stringify({success:!0,message:"验证成功",data:{sessionId:o.sessionId,timestamp:o.timestamp,challenge:o.challenge}})}:{statusCode:400,headers:r,body:JSON.stringify({success:!1,error:o.error||"验证失败"})}}catch(e){return console.error("验证API错误:",e),{statusCode:500,headers:r,body:JSON.stringify({success:!1,error:"服务器内部错误"})}}};